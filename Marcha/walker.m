function walker
  clf
  shg
  
  set(gcf,'color','white','name','Software de Marcha','menu','none', 'numbertitle','off')
  
  F = [];
  M = [];
  H = [];
  
  load walkers  % Cargar datos M y F
  
  V = (F+M)/2;  % Coeficiente matrix.
  
  X = reshape(V(:,1),15,3);
  
  L = {[1 5],[5 12],[2 3 4 5 6 7 8],[9 10 11 12 13 14 15]};
  
  p = zeros(1,4);
  
  for k = 1:4
    p(k) = line(X(L{k},1),X(L{k},2),X(L{k},3), ...
        'marker','o', ...
        'markersize',10, ...
        'linestyle','-');
  end
  
  set(p(1),'tag','happy','userdata',zeros(1,3));
  
  axis([-750 750 -750 750 0 1500])
  
  lift = get(gca,'position')+[0 .04 0 0];
  
  set(gca,'xtick',[],'ytick',[],'ztick',[],'position',lift,'clipping','off')
  view(160,10)

  % Controles deslizantes
  labels = {'Velocidad','Direccion','Influencia','Salto','Rebotar','Genero'};
  
  sliders = zeros(1,6);
  
  for j = 1:6
    switch j
      case 1
        smin = 0;
        start = 1; 
        smax = 3;
      case 6
        smin = -3;
        start = 0;
        smax = 3;
      otherwise
        smin = -2;
        start = 1;
        smax = 2;
  end
  
  slider_txt = uicontrol('style','text', ...
           'string',sprintf('%4.2f',start), ...
           'back','white', ...
           'units','normalized', ...
           'position',[.16*j-.10 .11 .08 .03]);
       sliders(j) = uicontrol('style','slider', ...
           'background','white', ...
           'units','normalized', ...
           'pos',[.16*j-.13 .07 .14 .03], ...
           'min',smin, ...
           'max',smax, ...
           'val',start, ...
           'sliderstep',[1 2]/(10*smax), ...
           'userdata',slider_txt, ...
           'callback',@slider_cb);
       uicontrol('style','text', ...
           'string',labels{j}, ...
           'background','white', ...
           'units','normalized', ...
           'position',[.16*j-.12 .02 .10 .04])
    end
    stop = uicontrol('style','toggle', ...
        'units','normalized', ...
        'position',[.91 .94 .08 .05], ...
        'background','white', ...
        'fontweight','bold', ...
        'string','Detener');
    uicontrol('style','radio', ...
        'units','normalized', ...
        'position',[.03 .90 .08 .08], ...
        'userdata',H, ...
        'background','white', ...
        'callback',@radio_cb)
    uicontrol('style','text', ...
        'units','normalized', ...
        'position',[.72 .25 .25 .08], ...
        'background','white', ...
        'fontangle','italic', ...
        'fontsize',get(0,'defaultuicontrolfontsize')-2, ...
        'string',{'Click en la figura','para rotar caminante'})
    cameratoolbar setmode orbit

    % Comenzar caminata'...

    period = 151.5751;
    omega = 2*pi/period;
    fps = 120;    % 120 fps
    t = 0;
    dt = 2*pi/omega/fps;
    while get(stop,'value') == 0
        s = cell2mat(get(sliders,'value'));
        t = t + s(1)*dt;
        c = [1 sin(omega*t) cos(omega*t) sin(2*omega*t) cos(2*omega*t)]';
        c = [1; s(2:5).*c(2:5)];
        V = (F+M)/2 + s(6)*(F-M)/2;
        X = reshape(V*c,15,3);
        H = get(p(1),'userdata');
        e = ones(size(H,1),1);
        XH = [X(e,:)+H; X(5,:)];
        set(p(1),'xdata',XH(:,1), ...
            'ydata',XH(:,2), ...
            'zdata',XH(:,3))
        for k = 2:4
            set(p(k),'xdata',X(L{k},1), ...
                'ydata',X(L{k},2), ...
                'zdata',X(L{k},3));
        end
        pause(1/(s(1)*fps))
    end
    cameratoolbar close
    set(stop,'value',0, ...
        'string','close', ...
        'fontweight','bold', ...
        'callback','close(gcf)')
    
    function slider_cb(s,~)
        stxt = get(s,'userdata');
        sval = get(s,'value');
        sprf = sprintf('%4.2f',sval);
        set(stxt,'string',sprf);
    end

    function radio_cb(s,~)
        p1 = findobj('tag','happy');
        if get(s,'value')
            set(p1,'marker','none', ...
                'userdata',get(s,'userdata'))
        else
            set(p1,'marker','o', ...
                'userdata',zeros(1,3))
        end
    end
        
end
